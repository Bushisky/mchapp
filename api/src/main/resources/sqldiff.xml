<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		USE:
			The diffs are ordered by datamodel version number.
			The script can be run in a top down fashion and is
			expected to not failor overwrite old data

		EXPECT:
			- "use business-database-name;" was called prior to
			   calling this script
	</help>
	<diff>
		<version>1.0.0</version>
		<author>Stanslaus Odhiambo</author>
		<date>Aug 24th 2016</date>
		<description>
			Create immunization commodity tables
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS immunization_store_transaction_type (id INT NOT NULL AUTO_INCREMENT,transaction_type VARCHAR(255) NULL,	PRIMARY KEY (id));
            CREATE TABLE IF NOT EXISTS immunization_store_drug (id INT NOT NULL AUTO_INCREMENT,inventory_drug_id INT(11) NOT NULL,batch_no VARCHAR(45) NOT NULL,current_quantity INT NOT NULL,created_on DATETIME NULL,expiry_date DATETIME NOT NULL,created_by INT(11) NOT NULL, PRIMARY KEY (id), UNIQUE INDEX batch_no_UNIQUE (batch_no ASC),  INDEX fk_immunization_store_drug_person1_idx (created_by ASC),  INDEX fk_immunization_store_drug_inventory_drug1_idx (inventory_drug_id ASC),  CONSTRAINT fk_immunization_store_drug_person1  FOREIGN KEY (created_by)  REFERENCES person (person_id) ON DELETE NO ACTION  ON UPDATE NO ACTION,  CONSTRAINT fk_immunization_store_drug_inventory_drug1 FOREIGN KEY (inventory_drug_id) REFERENCES inventory_drug(id)  ON DELETE NO ACTION ON UPDATE NO ACTION);
            CREATE TABLE IF NOT EXISTS immunization_store_drug_transaction_detail (id INT NOT NULL AUTO_INCREMENT,patient_id INT(11) NULL,transaction_type INT NOT NULL,immunization_store_drug_id INT NOT NULL,quantity INT NULL,openning_balance INT NULL,closing_balance INT NULL,created_on DATETIME NULL,created_by INT(11) NOT NULL,remark VARCHAR(150) NULL, PRIMARY KEY (id), INDEX fk_immunization_store_drug_transaction_detail_immunization__idx (transaction_type ASC), INDEX fk_immunization_store_drug_transaction_detail_person1_idx (created_by ASC),  INDEX fk_immunization_store_drug_transaction_detail_patient1_idx (patient_id ASC), INDEX fk_immunization_store_drug_transaction_detail_immunization__idx1(immunization_store_drug_id ASC),  CONSTRAINT fk_immunization_store_drug_transaction_detail_immunization_st1 FOREIGN KEY (transaction_type) REFERENCES immunization_store_transaction_type (id) ON DELETE NO ACTION ON UPDATE NO ACTION,  CONSTRAINT fk_immunization_store_drug_transaction_detail_person1 FOREIGN KEY (created_by) REFERENCES person (person_id)  ON DELETE NO ACTION  ON UPDATE NO ACTION,  CONSTRAINT fk_immunization_store_drug_transaction_detail_patient1    FOREIGN KEY (patient_id) REFERENCES patient (patient_id) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_immunization_store_drug_transaction_detail_immunization_st2  FOREIGN KEY (immunization_store_drug_id)   REFERENCES immunization_store_drug (id) ON DELETE NO ACTION  ON UPDATE NO ACTION);
        </sql>
	</diff>

    <diff>
		<version>1.1.0</version>
		<author>Stanslaus Odhiambo</author>
		<date>Aug 26th 2016</date>
		<description>
			add immunization equipment tables
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS immunization_stockout (id INT NOT NULL AUTO_INCREMENT,drug_id INT(11) NOT NULL, no_of_days INT NOT NULL,remarks VARCHAR(255) NULL,  PRIMARY KEY (id),  INDEX fk_immunization_stockout_inventory_drug_idx (drug_id ASC),  CONSTRAINT fk_immunization_stockout_inventory_drug    FOREIGN KEY (drug_id)    REFERENCES inventory_drug (id)    ON DELETE NO ACTION  ON UPDATE NO ACTION);
			CREATE TABLE IF NOT EXISTS immunization_equipment (id INT NOT NULL AUTO_INCREMENT,equipment_type VARCHAR(45) NULL,  model VARCHAR(45) NULL,working_status TINYINT(1) NULL,energy_source VARCHAR(45) NULL,age_in_years INT NULL,created_by VARCHAR(45) NULL,created_on DATETIME NULL, PRIMARY KEY (id));
        </sql>
	</diff>

    <diff>
		<version>1.1.1</version>
		<author>Stanslaus Odhiambo</author>
		<date>Aug 29th 2016</date>
		<description>
			add vvm stage to transaction table
		</description>
		<sql>
			ALTER TABLE immunization_store_drug_transaction_detail ADD vvm_stage INT(11) NOT NULL DEFAULT 0 AFTER immunization_store_drug_id
        </sql>
	</diff>

	<diff>
		<version>1.1.2</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 2nd 2016</date>
		<description>
			alter immunization stock-out to reflect date of depletion and restock
		</description>
		<sql>
			ALTER TABLE immunization_stockout ADD created_on DATETIME NOT NULL AFTER drug_id;
			ALTER TABLE immunization_stockout ADD date_depleted DATETIME NOT NULL;
			ALTER TABLE immunization_stockout ADD date_restocked DATETIME NOT NULL;
			ALTER TABLE immunization_stockout ADD date_modified DATETIME NOT NULL;
        </sql>
	</diff>

	<diff>
		<version>1.2.0</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 2nd 2016</date>
		<description>
			alter immunization stock-out to remove no_of_days - to be computed
		</description>
		<sql>
			ALTER TABLE immunization_stockout DROP COLUMN no_of_days;
        </sql>
	</diff>

	<diff>
		<version>1.2.1</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 2nd 2016</date>
		<description>
			alter immunization stock-out dates to allow for nulls
		</description>
		<sql>
			ALTER TABLE immunization_stockout MODIFY date_restocked DATETIME;
			ALTER TABLE immunization_stockout MODIFY date_modified DATETIME;
		</sql>
	</diff>

	<diff>
		<version>1.2.2</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 2nd 2016</date>
		<description>
			Insert Transaction Types
		</description>
		<sql>
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(1, "Receipts") ON DUPLICATE KEY UPDATE transaction_type="Receipts";
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(2, "Issues") ON DUPLICATE KEY UPDATE transaction_type="Issues";
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(3, "Returns") ON DUPLICATE KEY UPDATE transaction_type="Returns";
		</sql>
	</diff>
	<diff>
		<version>1.2.3</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 6th 2016</date>
		<description>
			Alter immunization_equipment to add remarks column
		</description>
		<sql>
			ALTER TABLE immunization_equipment ADD remarks VARCHAR(255);
		</sql>
	</diff>

	<diff>
		<version>1.2.4</version>
		<author>Stanslaus Odhiambo</author>
		<date>Sept 7th 2016</date>
		<description>
			Alter immunization_equipment to add date_of_manufacture column and drop age_in_years column
		</description>
		<sql>
			ALTER TABLE immunization_equipment ADD date_of_manufacture DATETIME NOT NULL;
			ALTER TABLE immunization_equipment DROP COLUMN age_in_years;
		</sql>
	</diff>

	<diff>
		<version>1.2.5</version>
		<author>Dennis Henry</author>
		<date>Oct 13th 2016</date>
		<description>
			add patient immunization transaction table to store immunization details
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS immunization_store_patient_transaction (id INT NOT NULL AUTO_INCREMENT, patient_id INT(11) NOT NULL, immunization_store_drug_id INT NOT NULL, quantity INT NULL, created_on DATETIME NULL, created_by INT(11) NOT NULL,remark VARCHAR(150) NULL, PRIMARY KEY (id), INDEX fk_immunization_store_patient_transaction_person1_idx (created_by ASC),  INDEX fk_immunization_store_patient_transaction_patient1_idx (patient_id ASC), INDEX fk_immunization_store_patient_transaction_immunization__idx1(immunization_store_drug_id ASC), CONSTRAINT fk_immunization_store_patient_transaction_person1 FOREIGN KEY (created_by) REFERENCES person (person_id) ON DELETE NO ACTION  ON UPDATE NO ACTION, CONSTRAINT fk_immunization_store_patient_transaction_patient1 FOREIGN KEY (patient_id) REFERENCES patient (patient_id) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_immunization_store_patient_transaction_immunization_st2  FOREIGN KEY (immunization_store_drug_id) REFERENCES immunization_store_drug (id) ON DELETE NO ACTION ON UPDATE NO ACTION);
        </sql>
	</diff>

    <diff>
        <version>1.2.6</version>
        <author>Dennis Henry</author>
        <date>Oct 13th 2016</date>
        <description>
            add vvm stage to immunization_store_patient_transaction table
        </description>
        <sql>
            ALTER TABLE immunization_store_patient_transaction ADD vvm_stage INT(11) NOT NULL DEFAULT 0 AFTER immunization_store_drug_id;
        </sql>
    </diff>

    <diff>
        <version>1.2.7</version>
        <author>Dennis Henry</author>
        <date>Oct 14th 2016</date>
        <description>
            add immunization_state to immunization_store_patient_transaction table
        </description>
        <sql>
            ALTER TABLE immunization_store_patient_transaction ADD immunization_state INT(11) NOT NULL DEFAULT 0 AFTER patient_id;
			ALTER TABLE immunization_store_patient_transaction ADD INDEX fk_immunization_store_patient_transaction_state1_idx (immunization_state ASC);
			ALTER TABLE immunization_store_patient_transaction ADD CONSTRAINT fk_immunization_store_patient_transaction_state1 FOREIGN KEY (immunization_state) REFERENCES patient_state (patient_state_id) ON DELETE NO ACTION  ON UPDATE NO ACTION;
        </sql>
    </diff>

	<diff>
		<version>1.2.8</version>
		<author>Dennis Henry</author>
		<date>Oct 17th 2016</date>
		<description>
			add Issue to Account and Return to supplier to the table immunization_store_transaction_type. Alter immunization_store_drug_transaction_detail to include the field transaction_account
		</description>
		<sql>
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(3, "Issue Returns") ON DUPLICATE KEY UPDATE transaction_type="Issue Returns";
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(4, "Issue To Account") ON DUPLICATE KEY UPDATE transaction_type="Issue To Account";
			INSERT INTO immunization_store_transaction_type(id, transaction_type) VALUES(5, "Return To Supplier") ON DUPLICATE KEY UPDATE transaction_type="Return To Supplier";
			ALTER TABLE immunization_store_drug_transaction_detail ADD transaction_account VARCHAR(150) NULL AFTER transaction_type;
		</sql>
	</diff>

	<diff>
		<version>1.2.9</version>
		<author>Dennis Henry</author>
		<date>Feb 27th 2017</date>
		<description>
			Create a new Person Attribute that will store the value of whether a child has been fully Immunized
		</description>
		<sql>
			INSERT INTO person_attribute_type (person_attribute_type_id,`name`,`description`,`format`,creator,date_created,`uuid`,sort_weight) VALUES (52,'Child Fully Immunized','Stored property whether a child has completed immunization','java.lang.Boolean',1,'2017-02-27','fd00a449-a5bc-a32f-bdd2-377ec1887c5c',52);
		</sql>
	</diff>
</sqldiff>
